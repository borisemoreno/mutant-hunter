buildscript {    // Configuration for building
	repositories {
		jcenter()    // Bintray's repository - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0' // If a newer version is available, use it
	}
}
plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}
repositories {
	mavenCentral()
	jcenter()
}

group = 'com.xmen'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

dependencies {

	compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's

	compile 'jstl:jstl:1.2'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter:1.0.0.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-sql-postgresql:1.0.0.RELEASE'

	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testCompile 'junit:junit:4.12'
	testCompile 'com.google.truth:truth:0.33'
	testCompile 'org.mockito:mockito-all:1.10.19'

	testCompile 'com.google.appengine:appengine-testing:+'
	testCompile 'com.google.appengine:appengine-api-stubs:+'
	testCompile 'com.google.appengine:appengine-tools-sdk:+'
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test

appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		projectId = 'mutant-hunter-307920'
		version = '1'
	}
}


test {
	//useJUnitPlatform()
	useJUnit()
	testLogging.showStandardStreams = true
	beforeTest { descriptor ->
		logger.lifecycle("test: " + descriptor + "  Running")
	}

	onOutput { descriptor, event ->
		logger.lifecycle("test: " + descriptor + ": " + event.message )
	}
	afterTest { descriptor, result ->
		logger.lifecycle("test: " + descriptor + ": " + result )
	}
	finalizedBy jacocoTestReport
}

group   = "com.xmen.mutant"        // Generated output GroupId
version = "1.0-SNAPSHOT"       // Version in generated output

sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8


jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
	dependsOn test
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				minimum = 1
			}
//			excludes = [
//					'package.ClassA',
//					'package.ClassB'
//			]
		}
		rule {
			limit {
				counter = 'INSTRUCTIONS'
				value = 'MISSEDRATIO'
				minimum = 0.3
			}
		}
	}
}